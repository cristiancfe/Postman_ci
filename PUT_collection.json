{
	"info": {
		"_postman_id": "880e5855-9c5e-4aaa-8c4a-795813499937",
		"name": "PUT Users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14374889",
		"_collection_link": "https://cristianeisenhut1.postman.co/workspace/API-Academy-LOST~77284095-8ab1-457a-b53e-2db2bc6f70c3/collection/14374889-880e5855-9c5e-4aaa-8c4a-795813499937?action=share&source=collection_link&creator=14374889"
	},
	"item": [
		{
			"name": "Editar Cadastro de usuário Copy",
			"item": [
				{
					"name": "Login com sucesso Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Removed the HTML content from the response body\r",
									"pm.test(\"Validando Status code 200 de sucesso\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const schema = {    \r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"required\": [\r",
									"        \"msg\",\r",
									"        \"user\",\r",
									"        \"token\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"msg\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The msg Schema\",\r",
									"            \"examples\": [\r",
									"                \"Olá Qa-Coders-SYSADMIN, autenticação autorizada com sucesso!\"\r",
									"            ]\r",
									"        },\r",
									"        \"user\": {\r",
									"            \"type\": \"object\",\r",
									"            \"default\": {},\r",
									"            \"title\": \"The user Schema\",\r",
									"            \"required\": [\r",
									"                \"_id\",\r",
									"                \"fullName\",\r",
									"                \"mail\",\r",
									"                \"password\",\r",
									"                \"accessProfile\",\r",
									"                \"cpf\",\r",
									"                \"status\",\r",
									"                \"audit\",\r",
									"                \"__v\"\r",
									"            ],\r",
									"            \"properties\": {\r",
									"                \"_id\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The _id Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"65384b692bff0787faabce88\"\r",
									"                    ]\r",
									"                },\r",
									"                \"fullName\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The fullName Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"Qa-Coders-SYSADMIN\"\r",
									"                    ]\r",
									"                },\r",
									"                \"mail\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The mail Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"sysadmin@qacoders.com\"\r",
									"                    ]\r",
									"                },\r",
									"                \"password\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The password Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"$2b$10$kEeXDRXLdbLu8.3RJ8zkMu.8O4q4BW4Yn742SipJFcjE8/0ZH8Wfy\"\r",
									"                    ]\r",
									"                },\r",
									"                \"accessProfile\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The accessProfile Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"SYSADMIN\"\r",
									"                    ]\r",
									"                },\r",
									"                \"cpf\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The cpf Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"11111111111\"\r",
									"                    ]\r",
									"                },\r",
									"                \"status\": {\r",
									"                    \"type\": \"boolean\",\r",
									"                    \"default\": false,\r",
									"                    \"title\": \"The status Schema\",\r",
									"                    \"examples\": [\r",
									"                        true\r",
									"                    ]\r",
									"                },\r",
									"                \"audit\": {\r",
									"                    \"type\": \"array\",\r",
									"                    \"default\": [],\r",
									"                    \"title\": \"The audit Schema\",\r",
									"                    \"items\": {\r",
									"                        \"type\": \"object\",\r",
									"                        \"default\": {},\r",
									"                        \"title\": \"A Schema\",\r",
									"                        \"required\": [\r",
									"                            \"registeredBy\",\r",
									"                            \"registrationDate\",\r",
									"                            \"registrationNumber\",\r",
									"                            \"companyId\",\r",
									"                            \"_id\"\r",
									"                        ],\r",
									"                        \"properties\": {\r",
									"                            \"registeredBy\": {\r",
									"                                \"type\": \"object\",\r",
									"                                \"default\": {},\r",
									"                                \"title\": \"The registeredBy Schema\",\r",
									"                                \"required\": [\r",
									"                                    \"userId\",\r",
									"                                    \"userLogin\"\r",
									"                                ],\r",
									"                                \"properties\": {\r",
									"                                    \"userId\": {\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"title\": \"The userId Schema\",\r",
									"                                        \"examples\": [\r",
									"                                            \"111111111111111111\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"userLogin\": {\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"title\": \"The userLogin Schema\",\r",
									"                                        \"examples\": [\r",
									"                                            \"sysadmin@qacoders.com\"\r",
									"                                        ]\r",
									"                                    }\r",
									"                                },\r",
									"                                \"examples\": [{\r",
									"                                    \"userId\": \"111111111111111111\",\r",
									"                                    \"userLogin\": \"sysadmin@qacoders.com\"\r",
									"                                }]\r",
									"                            },\r",
									"                            \"registrationDate\": {\r",
									"                                \"type\": \"string\",\r",
									"                                \"default\": \"\",\r",
									"                                \"title\": \"The registrationDate Schema\",\r",
									"                                \"examples\": [\r",
									"                                    \"terça-feira, 24/10/2023, 19:55:37 BRT\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"registrationNumber\": {\r",
									"                                \"type\": \"string\",\r",
									"                                \"default\": \"\",\r",
									"                                \"title\": \"The registrationNumber Schema\",\r",
									"                                \"examples\": [\r",
									"                                    \"01\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"companyId\": {\r",
									"                                \"type\": \"string\",\r",
									"                                \"default\": \"\",\r",
									"                                \"title\": \"The companyId Schema\",\r",
									"                                \"examples\": [\r",
									"                                    \"Qa.Coders\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"_id\": {\r",
									"                                \"type\": \"string\",\r",
									"                                \"default\": \"\",\r",
									"                                \"title\": \"The _id Schema\",\r",
									"                                \"examples\": [\r",
									"                                    \"65384b692bff0787faabce89\"\r",
									"                                ]\r",
									"                            }\r",
									"                        },\r",
									"                        \"examples\": [{\r",
									"                            \"registeredBy\": {\r",
									"                                \"userId\": \"111111111111111111\",\r",
									"                                \"userLogin\": \"sysadmin@qacoders.com\"\r",
									"                            },\r",
									"                            \"registrationDate\": \"terça-feira, 24/10/2023, 19:55:37 BRT\",\r",
									"                            \"registrationNumber\": \"01\",\r",
									"                            \"companyId\": \"Qa.Coders\",\r",
									"                            \"_id\": \"65384b692bff0787faabce89\"\r",
									"                        }]\r",
									"                    },\r",
									"                    \"examples\": [\r",
									"                        [{\r",
									"                            \"registeredBy\": {\r",
									"                                \"userId\": \"111111111111111111\",\r",
									"                                \"userLogin\": \"sysadmin@qacoders.com\"\r",
									"                            },\r",
									"                            \"registrationDate\": \"terça-feira, 24/10/2023, 19:55:37 BRT\",\r",
									"                            \"registrationNumber\": \"01\",\r",
									"                            \"companyId\": \"Qa.Coders\",\r",
									"                            \"_id\": \"65384b692bff0787faabce89\"\r",
									"                        }]\r",
									"                    ]\r",
									"                },\r",
									"                \"__v\": {\r",
									"                    \"type\": \"integer\",\r",
									"                    \"default\": 0,\r",
									"                    \"title\": \"The __v Schema\",\r",
									"                    \"examples\": [\r",
									"                        0\r",
									"                    ]\r",
									"                }\r",
									"            },\r",
									"            \"examples\": [{\r",
									"                \"_id\": \"65384b692bff0787faabce88\",\r",
									"                \"fullName\": \"Qa-Coders-SYSADMIN\",\r",
									"                \"mail\": \"sysadmin@qacoders.com\",\r",
									"                \"password\": \"$2b$10$kEeXDRXLdbLu8.3RJ8zkMu.8O4q4BW4Yn742SipJFcjE8/0ZH8Wfy\",\r",
									"                \"accessProfile\": \"SYSADMIN\",\r",
									"                \"cpf\": \"11111111111\",\r",
									"                \"status\": true,\r",
									"                \"audit\": [{\r",
									"                    \"registeredBy\": {\r",
									"                        \"userId\": \"111111111111111111\",\r",
									"                        \"userLogin\": \"sysadmin@qacoders.com\"\r",
									"                    },\r",
									"                    \"registrationDate\": \"terça-feira, 24/10/2023, 19:55:37 BRT\",\r",
									"                    \"registrationNumber\": \"01\",\r",
									"                    \"companyId\": \"Qa.Coders\",\r",
									"                    \"_id\": \"65384b692bff0787faabce89\"\r",
									"                }],\r",
									"                \"__v\": 0\r",
									"            }]\r",
									"        },\r",
									"        \"token\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The token Schema\",\r",
									"            \"examples\": [\r",
									"                \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTM4NGI2OTJiZmYwNzg3ZmFhYmNlODgiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRrRWVYRFJYTGRiTHU4LjNSSjh6a011LjhPNHE0Qlc0WW43NDJTaXBKRmNqRTgvMFpIOFdmeSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoidGVyw6dhLWZlaXJhLCAyNC8xMC8yMDIzLCAxOTo1NTozNyBCUlQiLCJyZWdpc3RyYXRpb25OdW1iZXIiOiIwMSIsImNvbXBhbnlJZCI6IlFhLkNvZGVycyIsIl9pZCI6IjY1Mzg0YjY5MmJmZjA3ODdmYWFiY2U4OSJ9XSwiX192IjowLCJpYXQiOjE3MDA2OTM0NTUsImV4cCI6MTcwMDc3OTg1NX0.VtaA30s4kw5ft51ldSryHsoDJG3ZoBDW6drZOwT-Jh0\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"examples\": [{\r",
									"        \"msg\": \"Olá Qa-Coders-SYSADMIN, autenticação autorizada com sucesso!\",\r",
									"        \"user\": {\r",
									"            \"_id\": \"65384b692bff0787faabce88\",\r",
									"            \"fullName\": \"Qa-Coders-SYSADMIN\",\r",
									"            \"mail\": \"sysadmin@qacoders.com\",\r",
									"            \"password\": \"$2b$10$kEeXDRXLdbLu8.3RJ8zkMu.8O4q4BW4Yn742SipJFcjE8/0ZH8Wfy\",\r",
									"            \"accessProfile\": \"SYSADMIN\",\r",
									"            \"cpf\": \"11111111111\",\r",
									"            \"status\": true,\r",
									"            \"audit\": [{\r",
									"                \"registeredBy\": {\r",
									"                    \"userId\": \"111111111111111111\",\r",
									"                    \"userLogin\": \"sysadmin@qacoders.com\"\r",
									"                },\r",
									"                \"registrationDate\": \"terça-feira, 24/10/2023, 19:55:37 BRT\",\r",
									"                \"registrationNumber\": \"01\",\r",
									"                \"companyId\": \"Qa.Coders\",\r",
									"                \"_id\": \"65384b692bff0787faabce89\"\r",
									"            }],\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTM4NGI2OTJiZmYwNzg3ZmFhYmNlODgiLCJmdWxsTmFtZSI6IlFhLUNvZGVycy1TWVNBRE1JTiIsIm1haWwiOiJzeXNhZG1pbkBxYWNvZGVycy5jb20iLCJwYXNzd29yZCI6IiQyYiQxMCRrRWVYRFJYTGRiTHU4LjNSSjh6a011LjhPNHE0Qlc0WW43NDJTaXBKRmNqRTgvMFpIOFdmeSIsImFjY2Vzc1Byb2ZpbGUiOiJTWVNBRE1JTiIsImNwZiI6IjExMTExMTExMTExIiwic3RhdHVzIjp0cnVlLCJhdWRpdCI6W3sicmVnaXN0ZXJlZEJ5Ijp7InVzZXJJZCI6IjExMTExMTExMTExMTExMTExMSIsInVzZXJMb2dpbiI6InN5c2FkbWluQHFhY29kZXJzLmNvbSJ9LCJyZWdpc3RyYXRpb25EYXRlIjoidGVyw6dhLWZlaXJhLCAyNC8xMC8yMDIzLCAxOTo1NTozNyBCUlQiLCJyZWdpc3RyYXRpb25OdW1iZXIiOiIwMSIsImNvbXBhbnlJZCI6IlFhLkNvZGVycyIsIl9pZCI6IjY1Mzg0YjY5MmJmZjA3ODdmYWFiY2U4OSJ9XSwiX192IjowLCJpYXQiOjE3MDA2OTM0NTUsImV4cCI6MTcwMDc3OTg1NX0.VtaA30s4kw5ft51ldSryHsoDJG3ZoBDW6drZOwT-Jh0\"\r",
									"    }]    \r",
									"\r",
									"};\r",
									"\r",
									"pm.test(\"Validando a estrutura do response\", ( ) => {\r",
									"\tpm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Token_valido\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"token\");\r",
									"});\r",
									"\r",
									"pm.environment.set(\"token\", pm.response.json().token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"{{emailvalido}}\",\r\n  \"password\": \"{{senhavalida}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://lost.qacoders.dev.br/api/login",
							"protocol": "https",
							"host": [
								"lost",
								"qacoders",
								"dev",
								"br"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "201 Cadastrar novo usuário com Sucesso Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"    \r",
									"    \r",
									"    function matricula(a,b){\r",
									"     return Math.floor(Math.random() * (b-a +1)) +a\r",
									"}\r",
									"\r",
									"var num1 = matricula(111,999);\r",
									"var num2 = matricula(111,999);\r",
									"var num3 = matricula(100,999);\r",
									"var num4 = matricula(11,99);\r",
									"\r",
									"var Cpf = (+num1+\"\"+num2+\"\"+num3+\"\"+num4);\r",
									"pm.environment.set(\"cpf\", Cpf);\r",
									"\r",
									"function firstName() {\r",
									"var firstName = [\"Sandra\", \"William\", \"Andre\", \"Mariano\",\"Fabiano\", \"Miguel\",\"Sibele\",\"Jose\",\"Joao\",\"Antonio\", \"Samuel\",\"Timoteo\",\"Roberval\",\"Natanael\",\"Tiburcio\", \"Godofredo\",\"Eustaqui\",\"Pafuncio\",\"Elza\", \"Elga\",\"Francisco\", \"Eduardo\", \"Lisandro\",\"Cristiane\",\"Eliza\", \"Luiza\",\"Poliana\", \"Milena\", \"Adroaldo\", \"Edson\"];\r",
									"var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"return randomItem;\r",
									"}\r",
									"pm.environment.set(\"FirstName\" , firstName());\r",
									"\r",
									"function lastName() {\r",
									"\tvar lastName = [\"Alves\",\"Silva\", \"Schmittel\", \"Eisenhut\", \"Schereder\", \"Kenedy\", \"Silva\", \"Duarte\", \"Goncalves\",\"Floriano\", \"Goldstein\", \"Ribeiro\", \"Fonseca\"];\r",
									"var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"return randomItem;\r",
									"}\r",
									"pm.environment.set(\"LastName\" , lastName());\r",
									"// concatena o rimeiro e o segundo e grava na variavel \r",
									"pm.environment.set(\"FullName\", pm.variables.get(\"FirstName\") + \" \" + pm.variables.get(\"LastName\"));\r",
									"\r",
									"function lastEmail() {\r",
									"\tvar lastEmail = [\"@bol.com.br\", \"@yahoo.com.br\",\"@terra.com.br\",\"@qacoders.com.br\",\"@cfe.com.br\", \"@cfe.com\"];\r",
									"var randomItem = lastEmail[Math.floor(Math.random() * lastEmail.length)];\r",
									"return randomItem;\r",
									"}\r",
									"pm.environment.set(\"LastEmail\" , lastEmail());\r",
									"pm.environment.set(\"EmailCompleto\", pm.variables.get(\"FirstName\").toLowerCase() + pm.variables.get(\"LastName\").toLowerCase() + pm.variables.get(\"LastEmail\").toLowerCase());\r",
									"\r",
									"\r",
									"\r",
									"function randomCpf(){\r",
									"    let randomCpf = '';\r",
									"    for(let i=0;i<11;i++){\r",
									"    randomCpf += Math.floor(Math.random()*10).toString();    \r",
									"}\r",
									"return randomCpf    \r",
									"}\r",
									"pm.environment.set(\"CPF\",randomCpf());\r",
									"\r",
									"// pm.environment.set(\"tokenUser\", pm.response.json().token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Validando Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Verificar mensagem\", () =>{\r",
									"    pm.environment.set(\"mensagem\", `Ola ${pm.environment.get('FullName')}, cadastro realizado com sucesso`)\r",
									"});\r",
									"\r",
									"pm.test(\"User ID\", () =>{\r",
									"    pm.expect(pm.environment.set(\"UserId\", pm.response.json().user._id));\r",
									"});\r",
									"\r",
									"pm.test(\"Response body structure is valid\", function () {\r",
									"    var responseJSON = pm.response.json();\r",
									"    pm.expect(responseJSON).to.be.an('object').that.has.property('msg');\r",
									"    pm.expect(responseJSON).to.be.an('object').that.has.property('user');\r",
									"    pm.expect(responseJSON.user).to.be.an('object').that.has.property('_id');\r",
									"    pm.expect(responseJSON.user).to.be.an('object').that.has.property('fullName');\r",
									"    pm.expect(responseJSON.user).to.be.an('object').that.has.property('mail');\r",
									"    pm.expect(responseJSON.user).to.be.an('object').that.has.property('accessProfile');\r",
									"    pm.expect(responseJSON.user).to.be.an('object').that.has.property('cpf');\r",
									"    pm.expect(responseJSON.user).to.be.an('object').that.has.property('status');\r",
									"    pm.expect(responseJSON.user).to.be.an('object').that.has.property('audit');\r",
									"    pm.expect(responseJSON.user).to.be.an('object').that.has.property('__v');\r",
									"});\r",
									"// Test to check the response message\r",
									"pm.test(\"Response message should not be empty\", function () {\r",
									"    pm.expect(pm.response.json().msg).to.not.be.empty;\r",
									"});\r",
									"\r",
									"// Test to check the user's email is a string\r",
									"pm.test(\"User email should be a string\", function () {\r",
									"    pm.expect(pm.response.json().user.mail).to.be.a('string');\r",
									"});\r",
									"\r",
									"// Test to check the user's status is a boolean\r",
									"pm.test(\"User status should be a boolean\", function () {\r",
									"    pm.expect(pm.response.json().user.status).to.be.a('boolean');\r",
									"});\r",
									"\r",
									"// Test to check the user's audit contains registeredBy object\r",
									"pm.test(\"User audit should contain registeredBy object\", function () {\r",
									"    pm.response.json().user.audit.forEach(function(audit) {\r",
									"        pm.expect(audit.registeredBy).to.be.an('object').that.has.property('userId');\r",
									"        pm.expect(audit.registeredBy).to.be.an('object').that.has.property('userLogin');\r",
									"    });\r",
									"});\r",
									"var template = `\r",
									"<style type=\"text/css\">\r",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
									"    .tftable tr {background-color:#ffffff;}\r",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
									"    .tftable tr:hover {background-color:#e0ffff;}\r",
									"</style>\r",
									"\r",
									"<table class=\"tftable\" border=\"1\">\r",
									"    <tr>\r",
									"        <th>User ID</th>\r",
									"        <th>Full Name</th>\r",
									"        <th>Email</th>\r",
									"        <th>Access Profile</th>\r",
									"        <th>CPF</th>\r",
									"        <th>Status</th>\r",
									"        <th>Registration Date</th>\r",
									"    </tr>\r",
									"    <tr>\r",
									"        <td>{{response.user._id}}</td>\r",
									"        <td>{{response.user.fullName}}</td>\r",
									"        <td>{{response.user.mail}}</td>\r",
									"        <td>{{response.user.accessProfile}}</td>\r",
									"        <td>{{response.user.cpf}}</td>\r",
									"        <td>{{response.user.status}}</td>\r",
									"        <td>{{response.user.audit.[0].registrationDate}}</td>\r",
									"    </tr>\r",
									"</table>\r",
									"`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    return {response: pm.response.json()}\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());\r",
									"\r",
									"pm.environment.set(\"NewUserMail\", pm.response.json().user.mail);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"{{FullName}}\",\r\n  \"mail\": \"{{EmailCompleto}}\",\r\n  \"password\": \"{{Password}}\",\r\n  \"accessProfile\": \"ADMIN\",\r\n  \"cpf\": \"{{cpf}}\",\r\n  \"confirmPassword\": \"{{Password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://lost.qacoders.dev.br/api/user",
							"protocol": "https",
							"host": [
								"lost",
								"qacoders",
								"dev",
								"br"
							],
							"path": [
								"api",
								"user"
							],
							"query": [
								{
									"key": "user",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login novo user Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"pm.environment.set(\"tokenNewUser\", pm.response.json().token);\r",
									"\r",
									"\r",
									"pm.test(\"Validando Status code 200 de sucesso\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const schema = {    \r",
									"    \"$id\": \"http://example.com/example.json\",\r",
									"    \"type\": \"object\",\r",
									"    \"default\": {},\r",
									"    \"title\": \"Root Schema\",\r",
									"    \"required\": [\r",
									"        \"msg\",\r",
									"        \"user\",\r",
									"        \"token\"\r",
									"    ],\r",
									"    \"properties\": {\r",
									"        \"msg\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The msg Schema\",\r",
									"            \"examples\": [\r",
									"                \"Olá Mariano Floriano, autenticação autorizada com sucesso!\"\r",
									"            ]\r",
									"        },\r",
									"        \"user\": {\r",
									"            \"type\": \"object\",\r",
									"            \"default\": {},\r",
									"            \"title\": \"The user Schema\",\r",
									"            \"required\": [\r",
									"                \"_id\",\r",
									"                \"fullName\",\r",
									"                \"mail\",\r",
									"                \"password\",\r",
									"                \"accessProfile\",\r",
									"                \"cpf\",\r",
									"                \"status\",\r",
									"                \"audit\",\r",
									"                \"__v\"\r",
									"            ],\r",
									"            \"properties\": {\r",
									"                \"_id\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The _id Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"66fb26776fda4030f25ccb67\"\r",
									"                    ]\r",
									"                },\r",
									"                \"fullName\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The fullName Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"Mariano Floriano\"\r",
									"                    ]\r",
									"                },\r",
									"                \"mail\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The mail Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"marianofloriano@yahoo.com.br\"\r",
									"                    ]\r",
									"                },\r",
									"                \"password\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The password Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"$2b$10$pcgIIHnludGm/geS0GPGm.eXQeJPHxlh1ucKPTW6M3M525hlJZKXC\"\r",
									"                    ]\r",
									"                },\r",
									"                \"accessProfile\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The accessProfile Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"ADMIN\"\r",
									"                    ]\r",
									"                },\r",
									"                \"cpf\": {\r",
									"                    \"type\": \"string\",\r",
									"                    \"default\": \"\",\r",
									"                    \"title\": \"The cpf Schema\",\r",
									"                    \"examples\": [\r",
									"                        \"26539169352\"\r",
									"                    ]\r",
									"                },\r",
									"                \"status\": {\r",
									"                    \"type\": \"boolean\",\r",
									"                    \"default\": false,\r",
									"                    \"title\": \"The status Schema\",\r",
									"                    \"examples\": [\r",
									"                        true\r",
									"                    ]\r",
									"                },\r",
									"                \"audit\": {\r",
									"                    \"type\": \"array\",\r",
									"                    \"default\": [],\r",
									"                    \"title\": \"The audit Schema\",\r",
									"                    \"items\": {\r",
									"                        \"type\": \"object\",\r",
									"                        \"default\": {},\r",
									"                        \"title\": \"A Schema\",\r",
									"                        \"required\": [\r",
									"                            \"registeredBy\",\r",
									"                            \"registrationDate\",\r",
									"                            \"registrationNumber\",\r",
									"                            \"_id\"\r",
									"                        ],\r",
									"                        \"properties\": {\r",
									"                            \"registeredBy\": {\r",
									"                                \"type\": \"object\",\r",
									"                                \"default\": {},\r",
									"                                \"title\": \"The registeredBy Schema\",\r",
									"                                \"required\": [\r",
									"                                    \"userId\",\r",
									"                                    \"userLogin\"\r",
									"                                ],\r",
									"                                \"properties\": {\r",
									"                                    \"userId\": {\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"title\": \"The userId Schema\",\r",
									"                                        \"examples\": [\r",
									"                                            \"66db5da6414c5c627622d6ef\"\r",
									"                                        ]\r",
									"                                    },\r",
									"                                    \"userLogin\": {\r",
									"                                        \"type\": \"string\",\r",
									"                                        \"default\": \"\",\r",
									"                                        \"title\": \"The userLogin Schema\",\r",
									"                                        \"examples\": [\r",
									"                                            \"sysadmin@qacoders.com\"\r",
									"                                        ]\r",
									"                                    }\r",
									"                                },\r",
									"                                \"examples\": [{\r",
									"                                    \"userId\": \"66db5da6414c5c627622d6ef\",\r",
									"                                    \"userLogin\": \"sysadmin@qacoders.com\"\r",
									"                                }]\r",
									"                            },\r",
									"                            \"registrationDate\": {\r",
									"                                \"type\": \"string\",\r",
									"                                \"default\": \"\",\r",
									"                                \"title\": \"The registrationDate Schema\",\r",
									"                                \"examples\": [\r",
									"                                    \"segunda-feira, 30/09/2024, 19:30:15 BRT\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"registrationNumber\": {\r",
									"                                \"type\": \"string\",\r",
									"                                \"default\": \"\",\r",
									"                                \"title\": \"The registrationNumber Schema\",\r",
									"                                \"examples\": [\r",
									"                                    \"QaCoders-4\"\r",
									"                                ]\r",
									"                            },\r",
									"                            \"_id\": {\r",
									"                                \"type\": \"string\",\r",
									"                                \"default\": \"\",\r",
									"                                \"title\": \"The _id Schema\",\r",
									"                                \"examples\": [\r",
									"                                    \"66fb26776fda4030f25ccb68\"\r",
									"                                ]\r",
									"                            }\r",
									"                        },\r",
									"                        \"examples\": [{\r",
									"                            \"registeredBy\": {\r",
									"                                \"userId\": \"66db5da6414c5c627622d6ef\",\r",
									"                                \"userLogin\": \"sysadmin@qacoders.com\"\r",
									"                            },\r",
									"                            \"registrationDate\": \"segunda-feira, 30/09/2024, 19:30:15 BRT\",\r",
									"                            \"registrationNumber\": \"QaCoders-4\",\r",
									"                            \"_id\": \"66fb26776fda4030f25ccb68\"\r",
									"                        }]\r",
									"                    },\r",
									"                    \"examples\": [\r",
									"                        [{\r",
									"                            \"registeredBy\": {\r",
									"                                \"userId\": \"66db5da6414c5c627622d6ef\",\r",
									"                                \"userLogin\": \"sysadmin@qacoders.com\"\r",
									"                            },\r",
									"                            \"registrationDate\": \"segunda-feira, 30/09/2024, 19:30:15 BRT\",\r",
									"                            \"registrationNumber\": \"QaCoders-4\",\r",
									"                            \"_id\": \"66fb26776fda4030f25ccb68\"\r",
									"                        }]\r",
									"                    ]\r",
									"                },\r",
									"                \"__v\": {\r",
									"                    \"type\": \"integer\",\r",
									"                    \"default\": 0,\r",
									"                    \"title\": \"The __v Schema\",\r",
									"                    \"examples\": [\r",
									"                        0\r",
									"                    ]\r",
									"                }\r",
									"            },\r",
									"            \"examples\": [{\r",
									"                \"_id\": \"66fb26776fda4030f25ccb67\",\r",
									"                \"fullName\": \"Mariano Floriano\",\r",
									"                \"mail\": \"marianofloriano@yahoo.com.br\",\r",
									"                \"password\": \"$2b$10$pcgIIHnludGm/geS0GPGm.eXQeJPHxlh1ucKPTW6M3M525hlJZKXC\",\r",
									"                \"accessProfile\": \"ADMIN\",\r",
									"                \"cpf\": \"26539169352\",\r",
									"                \"status\": true,\r",
									"                \"audit\": [{\r",
									"                    \"registeredBy\": {\r",
									"                        \"userId\": \"66db5da6414c5c627622d6ef\",\r",
									"                        \"userLogin\": \"sysadmin@qacoders.com\"\r",
									"                    },\r",
									"                    \"registrationDate\": \"segunda-feira, 30/09/2024, 19:30:15 BRT\",\r",
									"                    \"registrationNumber\": \"QaCoders-4\",\r",
									"                    \"_id\": \"66fb26776fda4030f25ccb68\"\r",
									"                }],\r",
									"                \"__v\": 0\r",
									"            }]\r",
									"        },\r",
									"        \"token\": {\r",
									"            \"type\": \"string\",\r",
									"            \"default\": \"\",\r",
									"            \"title\": \"The token Schema\",\r",
									"            \"examples\": [\r",
									"                \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmZiMjY3NzZmZGE0MDMwZjI1Y2NiNjciLCJmdWxsTmFtZSI6Ik1hcmlhbm8gRmxvcmlhbm8iLCJtYWlsIjoibWFyaWFub2Zsb3JpYW5vQHlhaG9vLmNvbS5iciIsInBhc3N3b3JkIjoiJDJiJDEwJHBjZ0lJSG5sdWRHbS9nZVMwR1BHbS5lWFFlSlBIeGxoMXVjS1BUVzZNM001MjVobEpaS1hDIiwiYWNjZXNzUHJvZmlsZSI6IkFETUlOIiwiY3BmIjoiMjY1MzkxNjkzNTIiLCJzdGF0dXMiOnRydWUsImF1ZGl0IjpbeyJyZWdpc3RlcmVkQnkiOnsidXNlcklkIjoiNjZkYjVkYTY0MTRjNWM2Mjc2MjJkNmVmIiwidXNlckxvZ2luIjoic3lzYWRtaW5AcWFjb2RlcnMuY29tIn0sInJlZ2lzdHJhdGlvbkRhdGUiOiJzZWd1bmRhLWZlaXJhLCAzMC8wOS8yMDI0LCAxOTozMDoxNSBCUlQiLCJyZWdpc3RyYXRpb25OdW1iZXIiOiJRYUNvZGVycy00IiwiX2lkIjoiNjZmYjI2Nzc2ZmRhNDAzMGYyNWNjYjY4In1dLCJfX3YiOjAsImlhdCI6MTcyNzc0NDAyMiwiZXhwIjoxNzI3ODMwNDIyfQ.L171xOPD02gfUOHviPIx3Yzmo8k8C6_pn9d_0MQJw7A\"\r",
									"            ]\r",
									"        }\r",
									"    },\r",
									"    \"examples\": [{\r",
									"        \"msg\": \"Olá Mariano Floriano, autenticação autorizada com sucesso!\",\r",
									"        \"user\": {\r",
									"            \"_id\": \"66fb26776fda4030f25ccb67\",\r",
									"            \"fullName\": \"Mariano Floriano\",\r",
									"            \"mail\": \"marianofloriano@yahoo.com.br\",\r",
									"            \"password\": \"$2b$10$pcgIIHnludGm/geS0GPGm.eXQeJPHxlh1ucKPTW6M3M525hlJZKXC\",\r",
									"            \"accessProfile\": \"ADMIN\",\r",
									"            \"cpf\": \"26539169352\",\r",
									"            \"status\": true,\r",
									"            \"audit\": [{\r",
									"                \"registeredBy\": {\r",
									"                    \"userId\": \"66db5da6414c5c627622d6ef\",\r",
									"                    \"userLogin\": \"sysadmin@qacoders.com\"\r",
									"                },\r",
									"                \"registrationDate\": \"segunda-feira, 30/09/2024, 19:30:15 BRT\",\r",
									"                \"registrationNumber\": \"QaCoders-4\",\r",
									"                \"_id\": \"66fb26776fda4030f25ccb68\"\r",
									"            }],\r",
									"            \"__v\": 0\r",
									"        },\r",
									"        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NmZiMjY3NzZmZGE0MDMwZjI1Y2NiNjciLCJmdWxsTmFtZSI6Ik1hcmlhbm8gRmxvcmlhbm8iLCJtYWlsIjoibWFyaWFub2Zsb3JpYW5vQHlhaG9vLmNvbS5iciIsInBhc3N3b3JkIjoiJDJiJDEwJHBjZ0lJSG5sdWRHbS9nZVMwR1BHbS5lWFFlSlBIeGxoMXVjS1BUVzZNM001MjVobEpaS1hDIiwiYWNjZXNzUHJvZmlsZSI6IkFETUlOIiwiY3BmIjoiMjY1MzkxNjkzNTIiLCJzdGF0dXMiOnRydWUsImF1ZGl0IjpbeyJyZWdpc3RlcmVkQnkiOnsidXNlcklkIjoiNjZkYjVkYTY0MTRjNWM2Mjc2MjJkNmVmIiwidXNlckxvZ2luIjoic3lzYWRtaW5AcWFjb2RlcnMuY29tIn0sInJlZ2lzdHJhdGlvbkRhdGUiOiJzZWd1bmRhLWZlaXJhLCAzMC8wOS8yMDI0LCAxOTozMDoxNSBCUlQiLCJyZWdpc3RyYXRpb25OdW1iZXIiOiJRYUNvZGVycy00IiwiX2lkIjoiNjZmYjI2Nzc2ZmRhNDAzMGYyNWNjYjY4In1dLCJfX3YiOjAsImlhdCI6MTcyNzc0NDAyMiwiZXhwIjoxNzI3ODMwNDIyfQ.L171xOPD02gfUOHviPIx3Yzmo8k8C6_pn9d_0MQJw7A\"\r",
									"    }]\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Validando a estrutura do response\", ( ) => {\r",
									"\tpm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"\r",
									"pm.test(\"Token_valido\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"token\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"// //add sysyadmin\r",
									"// // Pega a resposta em JSON\r",
									"// const responseJson = pm.response.json();\r",
									"\r",
									"// // Verifica se a resposta contém o campo accessProfile\r",
									"// if (responseJson.user && responseJson.user.accessProfile) {\r",
									"//     // Salva o valor de accessProfile em uma variável de ambiente\r",
									"//     pm.environment.set(\"adminAccessProfile\", responseJson.user.accessProfile);\r",
									"    \r",
									"//     // Verificação adicional (opcional)\r",
									"//     pm.test(\"Perfil de acesso salvo como SYSADMIN\", function () {\r",
									"//         pm.expect(responseJson.user.accessProfile).to.eql(\"SYSADMIN\");\r",
									"//     });\r",
									"// }\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" function generatePassword() {\r",
									"    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
									"    const comprimentoMinimo = 8;\r",
									"    const comprimentoMaximo = 12;\r",
									"    let senhaArray = [];\r",
									" \r",
									"    senhaArray.push(chars[Math.floor(Math.random() * 26)]); \r",
									"    senhaArray.push(chars[26 + Math.floor(Math.random() * 26)]); \r",
									"    senhaArray.push(chars[52 + Math.floor(Math.random() * 10)]); \r",
									"    senhaArray.push(chars[62 + Math.floor(Math.random() * 4)]); \r",
									"    \r",
									"    const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
									"    \r",
									"    for (let i = 0; i < comprimentoRestante; i++) {\r",
									"        senhaArray.push(chars[Math.floor(Math.random() * chars.length)]);\r",
									"    }\r",
									"    return shuffleString(senhaArray.join(\"\"));\r",
									"}\r",
									"\r",
									"function shuffleString(string) {\r",
									"  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
									"}\r",
									"pm.environment.set(\"NewPassword\", generatePassword());\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"mail\": \"{{NewUserMail}}\",\r\n  \"password\": \"{{Password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://lost.qacoders.dev.br/api/login",
							"protocol": "https",
							"host": [
								"lost",
								"qacoders",
								"dev",
								"br"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar_usuário",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" function firstName() {\r",
									"var firstName = [\"Sandra\", \"William\", \"Andre\", \"Mariano\",\"Fabiano\", \"Miguel\",\"Sibele\",\"Jose\",\"Joao\",\"Antonio\", \"Samuel\",\"Timoteo\",\"Roberval\",\"Natanael\",\"Tiburcio\", \"Godofredo\",\"Eustaqui\",\"Pafuncio\",\"Elza\", \"Elga\",\"Francisco\", \"Eduardo\", \"Lisandro\",\"Cristiane\",\"Eliza\", \"Luiza\",\"Poliana\", \"Milena\", \"Adroaldo\", \"Edson\"];\r",
									"var randomItem = firstName[Math.floor(Math.random() * firstName.length)];\r",
									"return randomItem;\r",
									"}\r",
									"pm.environment.set(\"FirstName\" , firstName());\r",
									"\r",
									"function lastName() {\r",
									"\tvar lastName = [\"Alves\",\"Silva\", \"Schmittel\", \"Eisenhut\", \"Schereder\", \"Kenedy\", \"Silva\", \"Duarte\", \"Goncalves\",\"Floriano\", \"Goldstein\", \"Ribeiro\", \"Fonseca\"];\r",
									"var randomItem = lastName[Math.floor(Math.random() * lastName.length)];\r",
									"return randomItem;\r",
									"}\r",
									"pm.environment.set(\"LastName\" , lastName());\r",
									"// concatena o rimeiro e o segundo e grava na variavel \r",
									"pm.environment.set(\"NovoFullName\", pm.variables.get(\"FirstName\") + \" \" + pm.variables.get(\"LastName\"));\r",
									"\r",
									"function lastEmail() {\r",
									"\tvar lastEmail = [\"@bol.com.br\", \"@yahoo.com.br\",\"@terra.com.br\",\"@qacoders.com.br\",\"@cfe.com.br\", \"@cfe.com\"];\r",
									"var randomItem = lastEmail[Math.floor(Math.random() * lastEmail.length)];\r",
									"return randomItem;\r",
									"}\r",
									"pm.environment.set(\"LastEmail\" , lastEmail());\r",
									"pm.environment.set(\"TrocaEmail\", pm.variables.get(\"FirstName\").toLowerCase() + pm.variables.get(\"LastName\").toLowerCase() + pm.variables.get(\"LastEmail\").toLowerCase());\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{tokenNewUser}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fullName\": \"{{NovoFullName}}\",\r\n  \"mail\": \"{{TrocaEmail}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{newUrl}}/api/user/{{UserId}}",
							"host": [
								"{{newUrl}}"
							],
							"path": [
								"api",
								"user",
								"{{UserId}}"
							],
							"query": [
								{
									"key": "Authorization",
									"value": "{{token}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar_password_usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function generatePassword() {\r",
									"    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%\";\r",
									"    const comprimentoMinimo = 8;\r",
									"    const comprimentoMaximo = 9;\r",
									"    let senhaArray = [];\r",
									" \r",
									"    senhaArray.push(chars[Math.floor(Math.random() * 26)]); \r",
									"    senhaArray.push(chars[26 + Math.floor(Math.random() * 26)]); \r",
									"    senhaArray.push(chars[52 + Math.floor(Math.random() * 10)]); \r",
									"    senhaArray.push(chars[62 + Math.floor(Math.random() * 4)]); \r",
									"    \r",
									"    const comprimentoRestante = Math.max(comprimentoMinimo - senhaArray.length, comprimentoMaximo - senhaArray.length);\r",
									"    \r",
									"    for (let i = 0; i < comprimentoRestante; i++) {\r",
									"        senhaArray.push(chars[Math.floor(Math.random() * chars.length)]);\r",
									"    }\r",
									"    return shuffleString(senhaArray.join(\"\"));\r",
									"}\r",
									"\r",
									"function shuffleString(string) {\r",
									"  return string.split(\"\").sort(() => Math.random() - 0.5).join(\"\");\r",
									"}\r",
									"pm.environment.set(\"TrocaPassword\", generatePassword());"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "token",
									"type": "string"
								},
								{
									"key": "value",
									"value": "{{tokenNewUser}}",
									"type": "string"
								},
								{
									"key": "in",
									"value": "query",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"{{TrocaPassword}}\",\r\n  \"confirmPassword\": \"{{TrocaPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{newUrl}}/api/user/password/{{UserId}}",
							"host": [
								"{{newUrl}}"
							],
							"path": [
								"api",
								"user",
								"password",
								"{{UserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar_usuário_sem_permissão",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Validando mensagem de usuário sem permissão\", () => {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.msg).to.eql(\"Você não tem permissão para esta função.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"1234@Testcfe\",\r\n  \"confirmPassword\": \"1234@Testcfe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{newUrl}}/api/user/password/{{UserId}}",
							"host": [
								"{{newUrl}}"
							],
							"path": [
								"api",
								"user",
								"password",
								"{{UserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar_status_usuário True",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validando mensagem Status True\", () => {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.msg).to.eql(\"Status do usuario atualizado com sucesso para status true.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://lost.qacoders.dev.br/api/user/status/{{UserId}}",
							"protocol": "https",
							"host": [
								"lost",
								"qacoders",
								"dev",
								"br"
							],
							"path": [
								"api",
								"user",
								"status",
								"{{UserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Editar_status_usuário False",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Validando mensagem Status False\", () => {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.msg).to.eql(\"Status do usuario atualizado com sucesso para status false.\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://lost.qacoders.dev.br/api/user/status/{{UserId}}",
							"protocol": "https",
							"host": [
								"lost",
								"qacoders",
								"dev",
								"br"
							],
							"path": [
								"api",
								"user",
								"status",
								"{{UserId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}